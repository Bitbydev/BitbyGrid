///SASS file that builds the GridCSS elements
///@author: Israel Trejo
///@group: BitByDev

///Mixins used by bitGridCSS
=createGrid($nameGrid, $stringElements, $space)
  .#{$nameGrid}
    display: inline-grid
    grid-gap: $space
    grid-template-columns: $stringElements
    width: 100%

/// Mixin that creates a GridCSS with Breakpoints
// the last three parameters must be maps
// The structure of the maps must be consistent with the number of breakpoints desired for the Grid
// The maps of amountCol (number of columns by size) and space (space between columns by size)
// they can have the same number of elements as the breakpoints, one or less, if they are more, they will not be taken into account
// those that exceed the breakpoints
=createGridCSS($nameGrid, $nameGridFull, $nameGridAux, $breakpoints, $amountCol, $space)
  $keysCol: map-keys($amountCol)
  $keysBp: map-keys($breakpoints)
  $keysEsp: map-keys($space)
  .#{$nameGridFull},
  .#{$nameGrid}
    display: grid
    width: 100%
    grid-template-columns: auto
    grid-gap: 0em

  .#{$nameGrid}
    max-width: 1200px

  //Classes to add all alignment rules
  .align-self-center
    align-self: center

  .align-self-start
    align-self: start

  .align-self-end
    align-self: end

  .align-center
    align-content: center

  .align-start
    align-content: start

  .align-end
    align-content: end

  .align-around
    justify-content: space-around

  .align-between
    justify-content: space-between

  .align-evenly
    justify-content: space-evenly

  .justify-self-center
    justify-self: center

  .justify-self-start
    justify-self: start

  .justify-self-end
    justify-self: end

  .justify-center
    justify-content: center

  .justify-start
    justify-content: start

  .justify-end
    justify-content: end

  .justify-around
    justify-content: space-around

  .justify-between
    justify-content: space-between

  .justify-evenly
    justify-content: space-evenly

  /// Process to create the automatic text string for the number of columns
  @for $i from 1 through length($breakpoints)
    @media only screen and (min-width: map-get($breakpoints, nth($keysBp, $i)))
      .#{$nameGrid},
      .#{$nameGridFull}
        @if $i <= length($keysCol)
          $stringElements: ''
          @for $j from 1 through map-get($amountCol, nth($keysCol, $i))
            $stringElements: $stringElements + 'auto '
          grid-template-columns: unquote($stringElements)

        @if $i <= length($keysEsp)
          grid-gap: map-get($space, nth($keysEsp, $i))
