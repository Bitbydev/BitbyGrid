///Sección de Sass que controla las GridCSS
///@author: Israel Trejo
///@group: BitByDev

///Mixins usados en GridCSS
=crearGrid($nombreGrid, $cadenaElementos, $espaciado)
  .#{$nombreGrid}
    display: inline-grid
    grid-gap: $espaciado
    grid-template-columns: $cadenaElementos
    width: 100%

///Mixin que crea un GridCSS con Breakpoints
//los tres ultimos parametros deben ser mapas
//La estructura de los mapas debe ser en cuestion de la cantidad de breakpoints deseados para el Grid
//Los mapas de cantCol (cantidad de columnas por tamaño) y espaciado (espacio entre columnas por tamaño)
//pueden tener la misma cantidad de elementos que los breakpoints, uno o menos, si son más no se tomarán en cuenta
//los que sobrepasen a los breakpoints
=crearBreakpointGridCSS($nombreGrid, $nombreGridFull, $nombreGridAux, $breakpoints, $cantCol, $espaciado)
  $keysCol: map-keys($cantCol)
  $keysBp: map-keys($breakpoints)
  $keysEsp: map-keys($espaciado)
  .#{$nombreGridFull},
  .#{$nombreGrid}
    display: grid
    width: 100%
    grid-template-columns: auto
    grid-gap: 0em

  .#{$nombreGrid}
    max-width: 1200px

  //Clases para agregar todas las reglas de alineamiento
  .align-self-center
    align-self: center

  .align-self-start
    align-self: start

  .align-self-end
    align-self: end

  .align-center
    align-content: center

  .align-start
    align-content: start

  .align-end
    align-content: end

  .align-around
    justify-content: space-around

  .align-between
    justify-content: space-between

  .align-evenly
    justify-content: space-evenly

  .justify-self-center
    justify-self: center

  .justify-self-start
    justify-self: start

  .justify-self-end
    justify-self: end

  .justify-center
    justify-content: center

  .justify-start
    justify-content: start

  .justify-end
    justify-content: end

  .justify-around
    justify-content: space-around

  .justify-between
    justify-content: space-between

  .justify-evenly
    justify-content: space-evenly

  @for $i from 1 through length($breakpoints)
    @media only screen and (min-width: map-get($breakpoints, nth($keysBp, $i)))
      .#{$nombreGrid},
      .#{$nombreGridFull}
        @if $i <= length($keysCol)
          $cadenaElementos: ''
          @for $j from 1 through map-get($cantCol, nth($keysCol, $i))
            $cadenaElementos: $cadenaElementos + 'auto '
          grid-template-columns: unquote($cadenaElementos)

        @if $i <= length($keysEsp)
          grid-gap: map-get($espaciado, nth($keysEsp, $i))
